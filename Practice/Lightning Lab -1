1. Upgrade the current version of kubernetes from 1.18 to 1.19.0 exactly using the kubeadm utility. 
Make sure that the upgrade is carried out one node at a time starting with the master node. 
To minimize downtime, the deployment gold-nginx should be rescheduled on an alternate node before upgrading each node.

Upgrade master/controlplane node first. Drain node01 before upgrading it. 
Pods for gold-nginx should run on the master/controlplane node subsequently.

kubectl drain controlplane --ignore-daemonsets

apt-mark unhold kubeadm && \
apt-get update && apt-get install -y kubeadm=1.19.0-00 && \
apt-mark hold kubeadm

kubeadm upgrade plan

sudo kubeadm upgrade apply v1.19.0

apt-mark unhold kubelet kubectl && \
    apt-get update && apt-get install -y kubelet=1.19.0-00 kubectl=1.19.0-00 && \
    apt-mark hold kubelet kubectl

sudo systemctl daemon-reload
sudo systemctl restart kubelet

kubectl uncordon controlplane
kubectl drain node01 --ignore-daemonsets

==========================================
apt-mark unhold kubeadm && \
apt-get update && apt-get install -y kubeadm=1.19.0-00 && \
apt-mark hold kubeadm

apt-mark unhold kubelet kubectl && \
    apt-get update && apt-get install -y kubelet=1.19.0-00 kubectl=1.19.0-00 && \
    apt-mark hold kubelet kubectl

sudo systemctl daemon-reload
sudo systemctl restart kubelet

kubectl uncordon node01

-------------------------------------------
2. Print the names of all deployments in the admin2406 namespace in the following format:
DEPLOYMENT CONTAINER_IMAGE READY_REPLICAS NAMESPACE
<deployment name> <container image used> <ready replica count> <Namespace>
. The data should be sorted by the increasing order of the deployment name.


Example:
DEPLOYMENT CONTAINER_IMAGE READY_REPLICAS NAMESPACE
deploy0 nginx:alpine 1 admin2406
Write the result to the file /opt/admin2406_data.

Hint: Make use of -o custom-columns and --sort-by to print the data in the required format.

--> kubectl get deployments -n admin2406 -o=custom-columns=DEPLOYMENT:.metadata.name,CONTAINER_IMAGE:.spec.template.spec.containers[0].image,READY_REPLICAS:.status.availableReplicas,NAMESPACE:.metadata.namespace --sort-by=.metadata.name > /opt/admin2406_data

3. A kubeconfig file called admin.kubeconfig has been created in /root/CKA. 
There is something wrong with the configuration. Troubleshoot and fix it.
serverip : 포트 6443

4. Create a new deployment called nginx-deploy, with image nginx:1.16 and 1 replica. 
Next upgrade the deployment to version 1.17 using rolling update. 
Make sure that the version upgrade is recorded in the resource annotation.

--> kubectl create deployment nginx-deploy --image=nginx:1.16 --dry-run=client -o yaml > nginx-deploy.yaml
--> kubectl apply -f nginx-deploy.yaml
--> kubectl set image deployment/nginx-deploy nginx=nginx:1.17 --record

5. A new deployment called alpha-mysql has been deployed in the alpha namespace. 
However, the pods are not running. Troubleshoot and fix the issue. 

The deployment should make use of the persistent volume alpha-pv to be mounted at /var/lib/mysql and 
should use the environment variable MYSQL_ALLOW_EMPTY_PASSWORD=1 to make use of an empty root password.

Important: Do not alter the persistent volume.

kubectl -n alpha get pvc
--> alpha-claim


6. Take the backup of ETCD at the location /opt/etcd-backup.db on the master node
ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \
  --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key \
  snapshot save /opt/etcd-backup.db

7. Create a pod called secret-1401 in the admin1401 namespace using the busybox image. 
The container within the pod should be called secret-admin and should sleep for 4800 seconds.

The container should mount a read-only secret volume called secret-volume at the path /etc/secret-volume. 
The secret being mounted has already been created for you and is called dotfile-secret.

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: secret-1401
  name: secret-1401
  namespace: admin1401
spec:
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret
  containers:
  - command:
    - sleep
    args:
    - "4800"
    image: busybox
    name: secret-admin
    volumeMounts:
    - name: secret-volume
      readOnly: true
      mountPath: "/etc/secret-volume" 
