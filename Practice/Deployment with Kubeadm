1. master와 worker 세팅
2. 호스트에 컨테이너 런타임 설치
3. Kube admin tool 깔기 (도커 쓰는경우에는 Secret driver 신경 안써도 됨)
4. 마스터 서버 초기화 (마스터노드만)
5. Pod 네트워크 구성 (마스터에서 weave 복사해서 실행) 
6. 마스터 노드에 워커 노드 Join 시키기(워커 노드에서 마스터에서 복사한 kubeadm join 실행)
# pre-requsite
master와 node01에서 
lsmod만 뭐가 떠야함
--> lsmod | grep br_netfilter
--> sudo modprobe br_netfilter
--> cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

# 컨테이너 런타임 설치 
sudo mkdir /etc/docker
cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

# kubeadm 설치 
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

# 마스터 서버 초기화 
kubeadm init --pod-network-cidr 10.244.0.0/16 --apiserver-advertise-address=172.17.0.10
logout 할 시 
mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
logout 안할 시
export KUBECONFIG=/etc/kubernetes/admin.conf

# pod network 구성
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

# worker에서 join
== worker node에서
kubeadm join 172.17.0.10:6443 --token zkdl1m.5n4l8nvnr94hufnv \
        --discovery-token-ca-cert-hash sha256:a76c1ddcf619f6937dd076f2faeeeae3a7d723b324b34573d96f50e837b7c017

-----------------------------------------------
1. Install the kubeadm package on master and node01
<controlplan, node01>
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

2. What is the version of kubelet installed?
--> kubelet --version
How many nodes are part of kubernetes cluster currently?

3. How many nodes are part of kubernetes cluster?
--> kubectl get nodes

4. kubeadm을 통해서 bootstrapping
--> 

5. initialize contorl plane
--> kubeadm init

<특별한 옵션이 있는 경우>
--> kubeadm init --pod-network-cidr 10.244.0.0/16 --apiserver-advertise-address=172.17.0.10

6. worker node 조인시키기
--> kubeadm token create --print-join-command

7. 네트워크 플러그인 설치
